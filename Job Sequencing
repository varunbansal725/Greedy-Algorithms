#include <stdio.h>
#include <stdlib.h>

void swap(int *x, int *y) {
    int temp;
        temp=*x;
        *x=*y;
        *y=temp;
}

struct Job {
    char a;
    int deadline;
    int profit;
};

void sorting(struct Job job[], int size) {
    int i,j;
    for(i=0; i<size-1; i++)
    for(j=i+1; j<size; j++) {
        if(job[i].profit < job [j].profit) {
            swap(&job[i].profit, &job[j].profit);
            swap(&job[i].deadline, &job[j].deadline);
            swap(&job[i].a, &job[j].a);
        }
    }
}

int minimum(int x, int y) {
    return (x<y)?x:y;
}

void JobSequencing(struct Job jobs[], int size) {
    int i,j;
    
    /* first sort all the jobs in decreasing order with respect to their respective profits */
    sorting(jobs, size);
    
    int seq[size];
    int slot[size];
    
    /* mark all the slots as free i.e. 0 */
    for(i=0; i<size; i++)
        slot[i]=0;
        
    /* pick one job at a time iteratively */
    for(i=0; i<size; i++) {
    
    /* pick up the possible free slot from the right end (select that slot which is max from right) */
        for(j=(minimum(size, jobs[i].deadline)-1); j>=0; j--) {
            if(slot[j]==0) {
            
            /* mark the job no. in the seq[] & also mark the slot as 1 i.e. included */
                seq[j]=i;
                slot[j]=1;
                break;
            }
        }
    }
    
    /* print all the jobs according to the sequence obtained in the sequence array */
    
    for(i=0; i<size; i++) {
        if(slot[i])
            printf("%c ", jobs[seq[i]].a);
    }
}


in main()
{
    int i,x,y;
    struct Job job[]={{'a',2,100}, {'b',1,19}, {'c',2,27},{'d',1,25},{'e',3,15}};
    JobSequencing(job, 5);

}
