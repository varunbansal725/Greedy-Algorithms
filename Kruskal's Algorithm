#include <stdio.h>
#include <stdlib.h>

int main()
{
    int i=0,k,min,j,n=9,u,v;
    /* initializing array for edges & its source and destination */
    int edges[3][14]={{4,9,9,3,1,2,3,4,5,6,7,8,8,8},{6,3,7,6,2,3,4,5,6,7,8,9,1,2},{14,2,6,4,4,8,7,9,10,2,1,7,8,11}};
    int included[14]={0};
    int set[10]={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
    int t[2][8];
    #define I 32767


    void myunion( int u, int v) {
    if (set[u] < set[v]) {
        set[u] += set[v];
        set[v] = u;
    }
    else {
        set[v] += set[u];
        set[u] = v;
    }
    }


    int find(int u) {
        int x=u, v=0;
        while(set[x] > 0)
            x = set[x];
        while(u!=x) {
            v=set[u];
            set[u]=x;
            u=v;
        }
        return x;
    }

    while(i < n-1) {
     min=I;
     for(j=0; j < 14; j++) {
        if(included[j]==0 && edges[2][j] < min) {
            min = edges[2][j];
            u=edges[0][j];
            v=edges[1][j];
            k=j;
        }
     }

     if(find(u)!=find(v)) {
        t[0][i] = u;
        t[1][i] = v;
        myunion(find(u), find(v));
        i++;
     }
     included[k]=1;
    }
    for(i=0; i < n-1; i++)
        printf("%d %d\n", t[0][i],t[1][i]);

}
